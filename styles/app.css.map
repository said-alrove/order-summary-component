{"version":3,"sourceRoot":"","sources":["../scss/03-base/_fonts.scss","../scss/03-base/_base.scss","../scss/02-vendors/_lessier.scss","../scss/01-abstracts/_mixins.scss","../scss/04-components/_card-container.scss","../scss/04-components/_card-image.scss","../scss/04-components/_card-main.scss","../scss/04-components/_card-header.scss","../scss/04-components/_plan-container.scss","../scss/04-components/_plan-main.scss","../scss/04-components/_plan-options.scss"],"names":[],"mappings":"AAGA;AACA;EACI;EACA;EACA;EACA;EACA;EACA;;AAEF;AACA;EACE;EACA;EACA;EACA;EACA;EACA;;AAEF;AACA;EACE;EACA;EACA;EACA;EACA;EACA;;AAEF;AACA;EACE;EACA;EACA;EACA;EACA;EACA;;AAEF;AACA;EACE;EACA;EACA;EACA;EACA;EACA;;AAEF;AACA;EACE;EACA;EACA;EACA;EACA;EACA;;ACpDJ;EACI;ECsPI;;;ADlPR;EACI,iBCoLW;EDlLP;EACA;EELA;EACA;EACA;EACA;;AD8NJ;EDhOJ;IEDQ;IACA;IACA;IACA;;;;AFUR;EACI;EACA;;ACsOI;EAEW;;;ADpOnB;EAAM;;;AAEN;EAAK;;;AGxBD;EACI;EAEI;EACA;EAEJ;EACA;EACA;EACA;EACA;;;ACTA;EACI;;;ACFR;EAAU;;;ACAV;EACI;;AAGJ;EACI;EAEI;EACA;EAEJ;;AAEA;EACI;EACA;;AAIR;EAEQ;EACA;EAEJ;EACA;;;ACxBJ;ENyFA;EASkB,iBMjGqB;ENmGvB,aMnGiD;EAC7D;EACA;EACA;EACA;;;ACNR;EP0FI;EAWgB,aOpGqB;EPsG1B,KOtGwC;;AAKvC;EPoFZ;EAWgB,aO9FiC;;AAIzC;EACI;;AAEA;EACI;EACA;;AAGJ;EACI;EACA;;AAMA;EACI;EACA;;;AC3BhB;EAAO;;AAEP;EPSJ;EACA;EAEI;EACA;EAGA;EACA;EAEJ;EAEI,kBOjBQ;EPmBZ,OOpBY;ERwKR;;AQ5JQ;EACI;;AAKZ;EPZJ;EACA;EAEI;EACA;EAGA;EACA;EAEJ;EAIA,OOCY;;AAEA;EACI","file":"app.css","sourcesContent":["//********************************* \r\n//* @FONT-FACE \r\n//*********************************\r\n/* latin-ext */\r\n@font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoToDh20ZKrAMEc.woff2) format('woff2');\r\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n  }\r\n  /* latin */\r\n  @font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoToDh20aqrA.woff2) format('woff2');\r\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n  }\r\n  /* latin-ext */\r\n  @font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoToRhu0ZKrAMEc.woff2) format('woff2');\r\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n  }\r\n  /* latin */\r\n  @font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoToRhu0aqrA.woff2) format('woff2');\r\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n  }\r\n  /* latin-ext */\r\n  @font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoTofhm0ZKrAMEc.woff2) format('woff2');\r\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n  }\r\n  /* latin */\r\n  @font-face {\r\n    font-family: 'Red Hat Display';\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/redhatdisplay/v4/8vIV7wUr0m80wwYf0QCXZzYzUoTofhm0aqrA.woff2) format('woff2');\r\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n  }","//********************************* \r\n//* BASE \r\n//*********************************\r\nhtml {\r\n    font-size: 62.5%;\r\n    @include less.box();\r\n}\r\n\r\nbody {\r\n    min-inline-size: less.$vw-mobile-sm;\r\n    font: {\r\n        family: map.get(abs.$ff, 'main');\r\n        size: 1.6rem;\r\n    }\r\n    @include abs.url-background('mobile');\r\n    @include less.query($device: 'tablet', $size: 'sm') {\r\n        @include abs.url-background('desktop');\r\n    }\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    @include less.box();\r\n}\r\n\r\nimg { max-width: 100%; }\r\n\r\nul { list-style: none; }","////////////////////////// \r\n// *** LESSIER 1.5 *** // \r\n///////////////////////// \r\n\r\n@use 'sass:math';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:meta';\r\n@use 'sass:selector';\r\n@use 'sass:string';\r\n@use 'sass:color';\r\n\r\n///////////////////// \r\n// *** MIXINS *** //\r\n////////////////////\r\n\r\n//************************\r\n//* CSS GRID\r\n//************************ \r\n@mixin grid\r\n(\r\n    $rows: false, \r\n    $cols: false, \r\n    $flow: false, \r\n    $auto-rows: false, \r\n    $auto-cols: false,  \r\n    $plc-items: false, \r\n    $jt-items: false, \r\n    $al-items: false, \r\n    $plc-content: false,\r\n    $jt-content: false, \r\n    $al-content: false, \r\n    $row-gap: false, \r\n    $col-gap: false,\r\n    $gap: false\r\n) \r\n{\r\n    display: grid;\r\n    @if $rows and $cols {\r\n        grid: $rows / $cols;\r\n    } @else if $rows {\r\n        grid-template-rows: $rows;\r\n    } @else if $cols {\r\n        grid-template-columns: $cols;\r\n    }\r\n\r\n    @if $flow { grid-auto-flow: $flow; }\r\n    \r\n    @if $auto-rows { grid-auto-rows: $auto-rows; }\r\n\r\n    @if $auto-cols { grid-auto-columns: $auto-cols; }\r\n\r\n    @if $plc-items {\r\n        place-items: $plc-items;\r\n    } @else if $jt-items and $al-items {\r\n        @error 'You are trying to use the $jt-items and $al-items arguments individually instead of using the shorthand $plc-items for fewer code';\r\n    } @else if $jt-items {\r\n        justify-items: $jt-items;\r\n    } @else if $al-items {\r\n        align-items: $al-items;\r\n    }\r\n\r\n    @if $plc-content {\r\n        place-content: $plc-content;\r\n    } @else if $jt-content and $al-content {\r\n        @error 'You are trying to use the $jt-content and $al-content arguments individually instead of using the shorthand $plc-content for fewer code';\r\n    } @else if $jt-content {\r\n        justify-content: $jt-content;\r\n    } @else if $al-content {\r\n        align-content: $al-content;\r\n    }\r\n\r\n    @if $gap { \r\n        gap: $gap; \r\n    } @else if $row-gap {\r\n        row-gap: $row-gap;\r\n    } @else if $col-gap {\r\n        column-gap: $col-gap;\r\n    }\r\n}\r\n\r\n//************************\r\n//* CSS FLEXBOX\r\n//************************\r\n@mixin flexbox\r\n(\r\n    $dir: false, \r\n    $wrap: false, \r\n    $jt-content: false, \r\n    $al-items: false,\r\n    $gap: false\r\n)\r\n{\r\n    display: flex;\r\n    @if $dir and $wrap {\r\n        flex-flow: $dir $wrap;\r\n    } @else if $dir {\r\n        flex-direction: $dir;\r\n    } @else if $wrap {\r\n        flex-wrap: $wrap;\r\n    }\r\n\r\n    @if $jt-content { justify-content: $jt-content; }\r\n\r\n    @if $al-items { align-items: $al-items; }\r\n\r\n    @if $gap { gap: $gap; }\r\n}\r\n\r\n//************************\r\n//* PSEUDO-ELEMENT\r\n//************************\r\n@mixin pseudo-element\r\n(\r\n    $loc: before, \r\n    $cont: '',\r\n    $pos: absolute,\r\n    $inset: false,\r\n    $top: 0,\r\n    $bottom: 0,\r\n    $left: 0,\r\n    $right: 0\r\n) \r\n{\r\n    position: relative;\r\n    &::#{$loc} {\r\n        content: $cont;\r\n        position: $pos;\r\n        @if $inset {\r\n            inset: $inset;\r\n        } @else if $inset == false {\r\n            inset: $top $right $bottom $left;\r\n        }\r\n        @content;\r\n    }\r\n}\r\n\r\n//************************\r\n//* SUPPORT\r\n//************************ \r\n@mixin support\r\n(\r\n    $property: false, \r\n    $value: false, \r\n    $support: false,\r\n    $args...\r\n) \r\n{\r\n    #{$property}: $value;\r\n    @supports not (#{$property}: $value) {\r\n        #{$property}: $value; \r\n        @if $support {\r\n            @each $key, $prefix in meta.keywords($args) {\r\n                -#{$prefix}-#{$property}: $value;\r\n            }\r\n        } @else if $support != true {\r\n            -webkit-#{$property}: $value;\r\n            -moz-#{$property}: $value;\r\n            -ms-#{$property}: $value;\r\n            -o-#{$property}: $value;\r\n        }\r\n    }\r\n}\r\n\r\n//************************\r\n//* SHADOW\r\n//************************\r\n@mixin shadow\r\n(\r\n    $type: box,\r\n    $x-axis: 0, \r\n    $y-axis: 0, \r\n    $blur: 0, \r\n    $spread: 0, \r\n    $color: #000, \r\n) \r\n{\r\n    @if $type == 'box' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $spread $color;\r\n    } @else if $type == 'text' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $color;\r\n    } @else {\r\n        @error '#{$type} is an unknown value, try using either box or text for creating shadows';\r\n    }\r\n}\r\n\r\n//************************\r\n//* MEDIA QUERIES\r\n//************************\r\n$vw-mobile-sm: 360px !default;\r\n$vw-mobile-md: 414px !default;\r\n$vw-mobile-lg: 480px !default;\r\n$vw-mobile-xl: 552px !default;\r\n\r\n$vw-tablet-sm: 768px !default;\r\n$vw-tablet-md: 912px !default;\r\n$vw-tablet-lg: 1024px !default;\r\n$vw-tablet-xl: 1280px !default;\r\n\r\n$vw-desktop-sm: 1366px !default;\r\n$vw-desktop-md: 1536px !default;\r\n$vw-desktop-lg: 1920px !default;\r\n\r\n$screen-sizes: \r\n(\r\n    'mobile': (\r\n        'sm': $vw-mobile-sm,\r\n        'md': $vw-mobile-md,\r\n        'lg': $vw-mobile-lg,\r\n        'xl': $vw-mobile-xl\r\n    ),\r\n    'tablet': (\r\n        'sm': $vw-tablet-sm,\r\n        'md': $vw-tablet-md,\r\n        'lg': $vw-tablet-lg,\r\n        'xl': $vw-tablet-xl\r\n    ),\r\n    'desktop': (\r\n        'sm': $vw-desktop-sm,\r\n        'md': $vw-desktop-md,\r\n        'lg': $vw-desktop-lg\r\n    )\r\n);\r\n\r\n@mixin query\r\n(\r\n    $type: min-width, \r\n    $device: false, \r\n    $size: false\r\n) \r\n{\r\n    $screen: map.get($screen-sizes, $device, $size); \r\n    @media (#{$type}: $screen) { @content; }\r\n\r\n    @if $device == false { \r\n        @error 'You have not given an available device value for your media query yet'; \r\n    } @else if $size == false {\r\n        @error 'You have not given an available screen size for your media query yet';\r\n    }\r\n}\r\n\r\n//************************\r\n//* BOX-MODEL\r\n//************************\r\n@mixin box() {\r\n    $selector: selector.parse(&);\r\n    $parent-1: selector.parse('html');\r\n    $parent-2: selector.parse('*');\r\n\r\n    @if $parent-1 == $selector {\r\n        box-sizing: border-box;\r\n    } @else if $parent-2 == $selector {\r\n        &,\r\n        &::before,\r\n        &::after { box-sizing: inherit; }\r\n    } @else {\r\n        @error 'You are trying to parse this mixin within a selector that is neither #{$parent-1} or #{$parent-2}';\r\n    }\r\n}\r\n\r\n//************************\r\n//* COMING SOON...\r\n//************************","@use 'sass:map';\r\n@use '../01-abstracts/colors' as abs;\r\n//********************************* \r\n//* MXIINS \r\n//*********************************\r\n@mixin url-background($device) {\r\n    background: {\r\n        color: map.get(abs.$clr, 'lt', 'blue-100');\r\n        image: url('https://said-alrove.github.io/order-summary-component/assets/svg/pattern-background-#{$device}.svg');\r\n        size: cover;\r\n        repeat: no-repeat;\r\n    }\r\n    @content;\r\n}\r\n\r\n@mixin btn($txt-color, $bg-color: false) {\r\n    display: block;\r\n    padding-block: 1.5rem;\r\n    font: {\r\n        size: 1.2rem;\r\n        weight: 700;\r\n    }\r\n    text: {\r\n        align: center;\r\n        decoration: none;\r\n    }\r\n    border-radius: 1rem;\r\n    @if $bg-color {\r\n        background-color: $bg-color;\r\n    }\r\n    color: $txt-color;\r\n    @content;\r\n}","//********************************* \r\n//* CARD-CONTAINER \r\n//*********************************\r\n.card {\r\n    &-container {\r\n        position: absolute;\r\n        inset: {\r\n            block-start: 50%;\r\n            inline-start: 50%;\r\n        }\r\n        transform: translate(-50%, -50%);\r\n        inline-size: clamp(30rem, 90%, 37rem);\r\n        border-radius: 1rem;\r\n        background-color: map.get(abs.$clr, 'white');\r\n        overflow: hidden;\r\n    }\r\n}","//********************************* \r\n//* CARD-CONTAINER \r\n//*********************************\r\n.card {\r\n    &__image {\r\n        img {\r\n            min-block-size: 17.5rem;\r\n        }\r\n    }\r\n}","//********************************* \r\n//* CARD-CONTAINER \r\n//*********************************\r\n.card {\r\n    &__main { padding: 2rem; }\r\n}","//********************************* \r\n//* CARD-CONTAINER \r\n//*********************************\r\n.card {\r\n    &__header {\r\n        text-align: center;\r\n    }\r\n\r\n    &__heading {\r\n        margin-block-start: .5rem;\r\n        font: {\r\n            size: 2.4rem;\r\n            weight: 900;\r\n        }\r\n        color: map.get(abs.$clr, 'dk', 'blue-300');\r\n\r\n        & + * {\r\n            margin-block: 2rem;\r\n            padding-inline: 1rem;\r\n        }\r\n    }\r\n\r\n    &__paragraph {\r\n        font: {\r\n            size: 1.4rem;\r\n            weight: 200;\r\n        }\r\n        line-height: 1.5em;\r\n        color: map.get(abs.$clr, 'dk', 'blue-200')\r\n    }\r\n}","//********************************* \r\n//* PLAN-CONTAINER \r\n//*********************************\r\n.plan {\r\n    &-container {\r\n        @include less.flexbox($jt-content: space-between, $al-items: center);\r\n        margin-block: 1.5rem 2.5rem;\r\n        padding: 2rem;\r\n        border-radius: 1rem;\r\n        background-color: map.get(abs.$clr, 'lt', 'blue-200');\r\n    }\r\n}","//********************************* \r\n//* PLAN-MAIN \r\n//*********************************\r\n.plan__main {\r\n        @include less.flexbox($al-items: center, $gap: 1.5rem);\r\n\r\n    @at-root {\r\n        .plan {\r\n            &__icon {\r\n                figure {\r\n                    @include less.flexbox($al-items: center);\r\n                }\r\n            }\r\n        \r\n            &__info {\r\n                font-size: 1.3rem;\r\n        \r\n                &-time {\r\n                    font-weight: 900;\r\n                    color: map.get(abs.$clr, 'dk', 'blue-300');\r\n                }\r\n        \r\n                &-price {\r\n                    font-weight: 200;\r\n                    color: map.get(abs.$clr, 'dk', 'blue-200');\r\n                }\r\n            }\r\n        \r\n            &__change {\r\n                &-btn {        \r\n                    &:active {\r\n                        text-decoration: none;\r\n                        color: map.get(abs.$clr, 'dk', 'blue-100');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","//********************************* \r\n//* PLAN-OPTIONS\r\n//*********************************\r\n.plan {\r\n    &-options {\r\n        .btn { margin-block-start: 1.5rem; }\r\n\r\n        .btn-payment {\r\n            @include abs.btn\r\n            (\r\n                map.get(abs.$clr, 'white'),\r\n                map.get(abs.$clr, 'dk', 'blue-100')\r\n            ) {\r\n                @include less.shadow\r\n                (\r\n                    $type: 'box',\r\n                    $y-axis: 1rem,\r\n                    $blur: 3rem,\r\n                    $spread: .25rem,\r\n                    $color: color.change(map.get(abs.$clr, 'black'), $alpha: .3)\r\n                );\r\n\r\n                &:active {\r\n                    background-color: color.scale(map.get(abs.$clr, 'dk', 'blue-100'), $lightness: 30%);\r\n                }\r\n            }\r\n        }\r\n\r\n        .btn-cancel {\r\n            @include abs.btn\r\n            (\r\n                map.get(abs.$clr, 'dk', 'blue-200')\r\n            ) {\r\n                &:active {\r\n                    color: map.get(abs.$clr, 'dk', 'blue-300');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]}